{"version":3,"sources":["profilePic.png","components/MenuAppbar.js","views/home/profilePic.png","views/home/Home.js","views/about/About.js","views/portfolio/Portfolio.js","components/MainRoute.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","float","title","MenuAppbar","classes","className","AppBar","position","Toolbar","ButtonGroup","variant","color","aria-label","style","Button","to","Home","href","target","rel","src","Logo","alt","About","Portfolio","MainRoute","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kNAAe,I,uCCSTA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,SAAU,GAEdC,WAAY,CACRC,YAAaJ,EAAMK,QAAQ,GAC3BC,MAAO,SAEXC,MAAO,CACHL,SAAU,OAsBHM,MAlBf,WACI,IAAMC,EAAUX,IAEhB,OACI,yBAAKY,UAAWD,EAAQR,MACpB,kBAACU,EAAA,EAAD,CAAQC,SAAS,UACb,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAaC,QAAQ,OAAOC,MAAM,UAAUC,aAAW,4BAA6BC,MAAO,CAAE,MAAS,UAClG,kBAACC,EAAA,EAAD,SAAS,kBAAC,IAAD,CAAMC,GAAG,IAAIF,MAAO,CAAE,MAAS,UAA/B,SACT,kBAACC,EAAA,EAAD,KAAQ,kBAAC,IAAD,CAAMC,GAAG,aAAaF,MAAO,CAAE,MAAS,UAAxC,cACR,kBAACC,EAAA,EAAD,KAAQ,kBAAC,IAAD,CAAMC,GAAG,SAASF,MAAO,CAAE,MAAS,UAApC,e,OChCjB,MAA0B,uC,MC4B1BG,MAxBf,WACI,OACI,yBAAKX,UAAU,OAEX,4BAAQA,UAAU,cACd,2CACA,oGACA,uBACIA,UAAU,WACVY,KAAK,wDACLC,OAAO,SACPC,IAAI,uBAJR,gBAQA,6BACA,6BACA,6BACA,yBAAKC,IAAKC,EAAMhB,UAAU,WAAWiB,IAAI,YCP1CC,MAbf,WACI,OACA,6BACI,sDACA,qHCJO,SAASC,IACpB,OACI,6BACI,8CACA,4JCwBGC,MAtBf,WACI,OACQ,kBAAC,IAAD,KACI,kBAAC,IAAD,CACRC,OAAK,EACRC,KAAM,IACSC,UAAWZ,IAEnB,kBAAC,IAAD,CACIU,OAAK,EACLC,KAAM,aACNC,UAAWJ,IAEf,kBAAC,IAAD,CACIE,OAAK,EACLC,KAAM,SACNC,UAAWL,MCWZM,MATf,WACE,OACE,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,QClBYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a901250b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profilePic.8a87c831.png\";","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar' \r\nimport Button from '@material-ui/core/Button' \r\n\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        float: 'right'\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nfunction MenuAppbar() {\r\n    const classes = useStyles();\r\n   \r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" >\r\n                <Toolbar>\r\n                    <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\"  style={{ 'float': 'right' }}>\r\n                        <Button> <Link to=\"/\" style={{ 'color': 'white' }}>Home</Link></Button>\r\n                        <Button><Link to=\"/portfolio\" style={{ 'color': 'white' }}>Portfolio</Link></Button>\r\n                        <Button><Link to=\"/about\" style={{ 'color': 'white' }}>About</Link></Button>\r\n                    </ButtonGroup>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuAppbar\r\n","export default __webpack_public_path__ + \"static/media/profilePic.8a87c831.png\";","import React from 'react'\r\nimport Logo from './profilePic.png'\r\nimport './App.css'\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <header className=\"App-header\">\r\n                <h1>Bienvenidx!</h1>\r\n                <p>Esta pagina esta en contruccion! Pero te invito a ir a mi linkedin :)</p>\r\n                <a\r\n                    className=\"App-link\"\r\n                    href=\"https://www.linkedin.com/in/gabriel-maiori-646801170/\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    >\r\n                    Mi Linkedin!\r\n                </a>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <img src={Logo} className=\"App-logo\" alt=\"logo\" />\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n    <div>\r\n        <h1>Hola! Este ser soy yo!</h1>\r\n        <p>\r\n            Soy Gaby Maiori, tengo miles de apodos de muchos amigos asi que decime como quieras!\r\n        </p>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default About\r\n","import React from 'react'\r\n\r\nexport default function Portfolio() {\r\n    return (\r\n        <div>\r\n            <h1>Gabriel Maiori</h1>\r\n            <p>\r\n                Estoy aprendiendo de modo autodidactica react, para no quedarme atras con esta tecnologia y tener una pagina linda en la web\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Switch, Route } from \"react-router-dom\"\r\n\r\nimport Home from \"../views/home/Home\" \r\nimport About from \"../views/about/About\"\r\nimport Portfolio from \"../views/portfolio/Portfolio\"\r\n\r\nfunction MainRoute() {\r\n    return (\r\n            <Switch>\r\n                <Route\r\n    \t\t\t\texact\r\n\t\t\t\t\tpath={'/'}\r\n                    component={Home}\r\n            />\r\n            <Route\r\n                exact\r\n                path={'/portfolio'}\r\n                component={Portfolio} \r\n            />\r\n            <Route\r\n                exact\r\n                path={'/about'}\r\n                component={About} \r\n            />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default MainRoute\r\n","import React from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport logo from './profilePic.png';\r\n// import './App.css';\r\n\r\nimport MenuAppbar from './components/MenuAppbar'\r\nimport MainRoute from './components/MainRoute'\r\n\r\n// const home = <div className=\"App\">\r\n//   <header className=\"App-header\">\r\n//     <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n//     <p>\r\n//            Edit <code>src/App.js</code> and save to reload.\r\n//     </p>\r\n//     <a\r\n//       className=\"App-link\"\r\n//       href=\"https://www.linkedin.com/in/gabriel-maiori-646801170/\"\r\n//       target=\"_blank\"\r\n//       rel=\"noopener noreferrer\"\r\n//     >\r\n//       inkedin!\r\n//     </a>\r\n//   </header>\r\n// </div>;\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n        <MenuAppbar></MenuAppbar>\r\n        <MainRoute></MainRoute>\r\n     </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}